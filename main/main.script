local poco = require('poco.lua.defold-poco')

function init(self)
    --msg.post(".", "acquire_input_focus")
    msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })

    poco:init_server(15004)

    poco:setDispatchFn("TestNewFunction", function(x, y, z)
            print("INSIDE NEW CLIENT TEST FUNCTION!", x, y, z)
            return {message= "someresult"}
        end)

    poco:setDispatchCallbackFn("Dump", function(scene)
            pprint("INSIDE NEW CALLBACK FUNCTION!", scene)
            return scene
        end)

    msg.post("levels#level1", "async_load")
end

function update(self, dt)
    poco:server_loop()
end

function on_input(self, action_id, action)
end

function on_message(self, message_id, message, sender)
    if message_id == hash("proxy_loaded") then
        msg.post(sender, "init")
        msg.post(sender, "enable")
    end
end