local dirtylarry = require "dirtylarry/dirtylarry"

function init(self)
	msg.post(".", "acquire_input_focus")

	self.animals = {"monkey", "panda", "pig"}
	self.current = nil
	self.current_name = nil
	self.original_pos = nil
	self.original_touch = nil
	self.score = 0
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

local function add_score(self, score)
	self.score = self.score + score
	gui.set_text(gui.get_node("score"), "" .. self.score)
end

local function tablefind(tab,el)
	for index, value in pairs(tab) do
		if value == el then
			return index
		end
	end
end

function on_input(self, action_id, action)
	dirtylarry:button("bn_back", action_id, action, function ()
		msg.post(msg.url("main", "/controller", "script"), "load_level", {name="menu"})
	end)

	if action_id == hash("touch") and action.pressed then
		for _, name in ipairs(self.animals) do
			local n = gui.get_node(name)
			if gui.pick_node(n, action.x, action.y) then
				self.current = n
				self.current_name = name
				self.original_pos = gui.get_position(n)
				self.original_touch = vmath.vector3(action.x, action.y, 0)
				
				gui.set_color(self.current, vmath.vector4(1,1,1,0.5))
			end
		end
	elseif action_id == hash("touch") and action.released and self.current ~= nil then

		local n = gui.get_node("goal")
		if gui.pick_node(n, action.x, action.y) then
			gui.delete_node(self.current)
			table.remove(self.animals, tablefind(self.animals, self.current_name))
			add_score(self, 100)
		else
			gui.set_color(self.current, vmath.vector4(1,1,1,1))
			gui.set_position(self.current, self.original_pos)
		end		
		
		self.current = nil
		self.current_name = nil
		self.original_pos = nil
		self.original_touch = nil

	elseif action_id == hash("touch") and self.current ~= nil then
		local delta = vmath.vector3(action.x, action.y, 0) - self.original_touch
		gui.set_position(self.current, self.original_pos + delta)
	end
end