local dirtylarry = require "dirtylarry/dirtylarry"

local function login(self, email)
	gui.set_text(gui.get_node("login_status"), "Logged in with " .. email)
end

local function update_status(self)
	gui.set_text(gui.get_node("radio_value"), "Value: " .. self.radio_value)
	gui.set_text(gui.get_node("checkbox_value"), "Value: " .. tostring(self.checkbox_value))
end

function init(self)
	msg.post(".", "acquire_input_focus")

	self.email = ""
	self.radio_value = 0
	self.slider_value = 0
	self.checkbox_value = false

	update_status(self)
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	local updated = false
	
	self.email = dirtylarry:input("input_email", action_id, action, gui.KEYBOARD_TYPE_EMAIL, self.email)

	dirtylarry:button("bn_login", action_id, action, function ()
		login(self, self.email)
	end)

	local old_value = self.checkbox_value
	self.checkbox_value = dirtylarry:checkbox("checkbox", action_id, action, self.checkbox_value)

	updated = updated or old_value ~= self.checkbox_value
	
	old_value = self.radio_value
	self.radio_value = dirtylarry:radio("radio_0", action_id, action, 0, self.radio_value)
	self.radio_value = dirtylarry:radio("radio_1", action_id, action, 1, self.radio_value)

	updated = updated or old_value ~= self.radio_value

	old_value = self.slider_value
	self.slider_value = dirtylarry:slider("slider", action_id, action, -1.0, 1.0, self.slider_value)

	updated = updated or old_value ~= self.slider_value
	
	if updated then
		update_status(self)
	end
	
	dirtylarry:button("bn_back", action_id, action, function ()
		msg.post(msg.url("main", "/controller", "script"), "load_level", {name="menu"})
	end)
end
